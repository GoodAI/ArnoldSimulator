// Definitions for the Request messages

namespace GoodAI.Arnold.Communication;


// Error response.

table ErrorResponse {
	message:string;
}

// End of error response.


// State response.

enum StateType:byte {
	Empty,
	Running,
	Paused,
	ShuttingDown
}

table StateResponse {
	state:StateType;
	brainStep:uint;
	bodyStep:uint;
	brainStepsPerBodyStep:uint;
}

// End of state response.


// Model (topology and activity) response.

table Position {
	x:float;
	y:float;
	z:float;
}

table Region {
	index:uint;
	name:string;
	type:string;
	position:Position;
	size:Position;
}

enum Direction:byte {
	Forward,
	Backward
}

table Connector {
	regionIndex:uint;
	name:string;
	direction:Direction;
	size:uint;
}

table ConnectorRemoval {
	regionIndex:uint;
	name:string;
	direction:Direction;
}

table Connection {
	fromRegion:uint;
	fromConnector:string;
	toRegion:uint;
	toConnector:string;
	direction:Direction;
}

table NeuronId {
	neuron:uint;
	region:uint;
}

table Neuron {
	id:NeuronId;
	type:string;
	position:Position;
}

table Synapse {
	from:NeuronId;
	to:NeuronId;
}

table ModelResponse {
	isFull:bool;

	// Region and above - incremental changes, the UI holds complete topology.
	addedRegions:[Region];
	repositionedRegions:[Region];
	removedRegions:[uint];
	
	addedConnectors:[Connector];
	removedConnectors:[ConnectorRemoval];
	
	addedConnections:[Connection];
	removedConnections:[Connection];
	
	// Neuron and below - the core sends everything according to a predefined filter.
	addedNeurons:[Neuron];
	repositionedNeurons:[Neuron];
	removedNeurons:[NeuronId];
	
	addedSynapses:[Synapse];
	spikedSynapses:[Synapse];
	removedSynapses:[Synapse];
}

// End of model response.


// All the responses must be here, including error.
union Response {
	ErrorResponse,
	StateResponse,
	ModelResponse
}

table ResponseMessage {
	response:Response;
}

root_type ResponseMessage;
