mainmodule core
{
    include "ckcallback-ccs.h";
    include "common.h";
    include "spike.h";
    include "synapse.h";

    extern module brain;
    extern module region;
    extern module neuron;

    readonly CkGroupID gMulticastGroupId;
    readonly CProxy_CompletionDetector gCompletionDetector;

    readonly CProxy_Core gCore;
    readonly CProxy_BrainBase gBrain;
    readonly CProxy_RegionBase gRegions;
    readonly CProxy_NeuronBase gNeurons;

    initnode void CoreNodeInit();
    initproc void CoreProcInit();

    mainchare [migratable] Core
    {
        entry Core(CkArgMsg *msg);
        entry void Exit();

        entry void HandleRequestFromClient(CkCcsRequestMsg *msg);
        
        entry void RunTests(std::vector<std::string> args);

        entry void BrainUnloaded();
    };
};
